{
  "cairo.sql.parallel.filter.enabled": {
    "default": "true",
    "description": "Enable or disable parallel SQL filter execution. JIT compilation takes place only when this setting is enabled."
  },
  "cairo.sql.parallel.filter.pretouch.enabled": {
    "default": "true",
    "description": "Enable column pre-touch as part of the parallel SQL filter execution, to improve query performance for large tables."
  },
  "cairo.page.frame.shard.count": {
    "default": "4",
    "description": "Number of shards for both dispatch and reduce queues. Shards reduce queue contention between SQL statements that are executed concurrently."
  },
  "cairo.page.frame.reduce.queue.capacity": {
    "default": "64",
    "description": "Reduce queue is used for data processing and should be large enough to supply tasks for worker threads (shared worked pool)."
  },
  "cairo.page.frame.rowid.list.capacity": {
    "default": "256",
    "description": "Row ID list initial capacity for each slot of the reduce queue. Larger values reduce memory allocation rate, but increase minimal RSS size."
  },
  "cairo.page.frame.column.list.capacity": {
    "default": "16",
    "description": "Column list capacity for each slot of the reduce queue. Used by JIT-compiled filter functions. Larger values reduce memory allocation rate, but increase minimal RSS size."
  }
}
